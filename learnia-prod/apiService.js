export function getOrGenerateSessionId(){let t=sessionStorage.getItem("chatbotSessionId");return t||(t="xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx".replace(/[xy]/g,function(t){const e=16*Math.random()|0;return("x"===t?e:3&e|8).toString(16)}),sessionStorage.setItem("chatbotSessionId",t)),t}export function sendMessageToBotStream(t,e,o,s,n,r,a){const i={sessionInfo:{session:`projects/YOUR_PROJECT_ID/locations/us-central1/agents/YOUR_AGENT_ID/sessions/${e}`,parameters:{}},text:t};s.length>0&&(i.sessionInfo.parameters.context=s),fetch(o,{method:"POST",headers:{"Content-Type":"application/json"},body:JSON.stringify(i)}).then(t=>{if(!t.ok)throw new Error(`API Error: ${t.status}`);const e=t.body.getReader(),o=new TextDecoder;let s="";return e.read().then(function t({done:a,value:i}){if(a)return void r();let x;for(s+=o.decode(i,{stream:!0});-1!==(x=s.indexOf("\n\n"));){const t=s.substring(0,x);if(s=s.substring(x+2),t.startsWith("data: ")){const e=t.replace("data: ","");n(e)}}return e.read().then(t)})}).catch(t=>{a(t)})}const UPDATE_HISTORY_URL="https://aux-funcs.azurewebsites.net/api/update_history?";export function updateHistoryOnBackend(t,e){fetch(UPDATE_HISTORY_URL,{method:"POST",headers:{"Content-Type":"application/json"},body:JSON.stringify({session_id:t,history:e})}).then(t=>{t.ok||console.error("Error updating history:",t.status)}).catch(t=>{console.error("Failed to update history:",t)})}